import java.util.*;
import java.io.*;
import java.math.*;

/**
 * Auto-generated code below aims at helping you parse
 * the standard input according to the problem statement.
 **/
class Solution {

    public static void main(String args[]) {
        Scanner in = new Scanner(System.in);
        int N = in.nextInt();
        int L = in.nextInt();
        if (in.hasNextLine()) {
            in.nextLine();
        }
        
         int[][] grid = new int[N][N];
        
        //Read and create initial grid.
        for (int x = 0; x < N; x++)
        {   
            String[] line = in.nextLine().split(" ");
            
            for (int y = 0; y < N; y++)
            {
                grid[x][y] = line[y].equals("C") ? L : 0;
                

            }
        }
        
        for (int i = L - 1; i > 0; i--)
        {
            for (int x = 0; x < N; x++)
            {
                for (int y = 0; y < N; y++)
                {
                    //Find biggest surrounding cell.
                    int max_surrounding_cell = 0;
                    
                    for (int x_step = -1; x_step <= 1; x_step++)
                    {
                        for (int y_step = -1; y_step <= 1; y_step++)
                        {
                            if(0 <= x + x_step && x + x_step < N && 0 <= y + y_step && y + y_step < N)
                            {
                                max_surrounding_cell = Math.max(max_surrounding_cell, grid[x + x_step][y + y_step]);
                               // System.out.println(max_surrounding_cell);

                            }
                        }
                    }
        
                    //Dimmed spot on (x, y) is the maximum in the surrounding cells minus one.
                    grid[x][y] = Math.max(grid[x][y], max_surrounding_cell - 1);
                }
            }
}
     
                int darkSpots = 0;
        
        for (int x = 0; x < N; x++)
        {
            for (int y = 0; y < N; y++)
            {
                if (grid[x][y] == 0)
                {
                    darkSpots++;
                }
            }
        }
        
        System.out.println(darkSpots);
    }
}

        // Write an action using System.out.println()
        // To debug: System.err.println("Debug messages...");

        // System.out.println("2");
    
import java.util.*;
import java.io.*;
import java.math.*;

/**
 * Auto-generated code below aims at helping you parse
 * the standard input according to the problem statement.
 **/
class Player {

    public static void main(String args[]) {
        Scanner in = new Scanner(System.in);
        int nbFloors = in.nextInt(); // number of floors
        int width = in.nextInt(); // width of the area
        int nbRounds = in.nextInt(); // maximum number of rounds
        int exitFloor = in.nextInt(); // floor on which the exit is found
        int exitPos = in.nextInt(); // position of the exit on its floor
        int nbTotalClones = in.nextInt(); // number of generated clones
        int nbAdditionalElevators = in.nextInt(); // ignore (always zero)
        int nbElevators = in.nextInt(); // number of elevators
        in.nextLine();
        int floorBlock[] = new int[nbFloors];
        for (int i = 0; i < nbFloors; i++) {
            floorBlock[i] = 0;
                                            }

        int elevatorPos[] = new int[nbElevators];
        for (int i = 0; i < nbElevators; i++) {
            int elevatorFloor = in.nextInt(); // floor on which this elevator is found
            elevatorPos[elevatorFloor] = in.nextInt(); // position of the elevator on its floor
            in.nextLine();
 
        }
      

        // game loop
        while (true) {
            int cloneFloor = in.nextInt(); // floor of the leading clone
            int clonePos = in.nextInt(); // position of the leading clone on its floor
            String direction = in.next(); // direction of the leading clone: LEFT or RIGHT
            if(cloneFloor == -1){
                    System.out.println("WAIT");}
                    
            else if(exitFloor == cloneFloor){
                System.err.println("EXIT etage");
                if (etageBlock[cloneFloor] ==0 && clonePos > exitPos && "RIGHT".equalsIgnoreCase(direction)){
                    System.out.println("BLOCK");
                    etageBlock[cloneFloor] = 1;
                }else if (etageBlock[cloneFloor] ==0 && clonePos < exitPos && "LEFT".equalsIgnoreCase(direction)){
                    System.out.println("BLOCK");
                    etageBlock[cloneFloor] = 1;
                }else {
                    System.out.println("WAIT"); // action: WAIT or BLOCK
                    }
            }
            else {
                System.err.println("etage FLOOR");
                System.err.println("elevatorPos " +elevatorPos[cloneFloor]);
                if (etageBlock[cloneFloor] ==0 && elevatorPos[cloneFloor] < clonePos && "RIGHT".equalsIgnoreCase(direction)){
                    System.out.println("BLOCK"); 
                    etageBlock[cloneFloor] = 1;
               }else if (etageBlock[cloneFloor] ==0 && elevatorPos[cloneFloor] > clonePos && "LEFT".equalsIgnoreCase(direction)){
                    System.out.println("BLOCK"); 
                    etageBlock[cloneFloor] = 1;
              }else {
                    System.out.println("WAIT"); // a
                }
}

        }
    }
}